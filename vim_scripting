Vim scripts have the .vim ending.
To execute a vimscript type :source %
(or "so %")

If you put your example.vim file into ~/.vim/plugin it gets executed everytime you start vim.
There is also the folder ftplugin for plugins that are for specific filetypes, but for a start thats too complicated.

https://vim.help/41-write-a-vim-script

https://vimhelp.org/usr_41.txt.html#function-list

https://devhints.io/vimscript-functions

I am trying to build a function that comments the line if it is not commented
or uncomment if it is commented no matter in which column the cursor is.
And at the same time not overwriting any registers.
(for example if you do "dd" that line is saved in a register)

To go into insert mode and insert the text "new text" do this:
execute "normal Inew text \<Esc>

---------------------------------
simple vimscript:

let name = "John"

echo "Hello, " . name

---------------------------------

"this worked without the function and only inside the script itself:

function {commenter} ()
  let curline=getline('.')

  let firstpart=strpart(curline, 0, 1)

  normal 0

  if firstpart == "\""
    "typing "_x deletes one character in vim without putting it in register:
    normal "_x
  else
    execute "normal i\"\<Esc>"
  endif
endfunction

